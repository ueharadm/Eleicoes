/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eleicoes;

import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas
 */
public class ResultadoEleicao extends javax.swing.JFrame {

    DefaultListModel model = new DefaultListModel();
    /**
     * Creates new form ResultadoEleicao
     */
    public ResultadoEleicao() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textResultado = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listResultado = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        textResultado.setEditable(false);
        textResultado.setColumns(20);
        textResultado.setRows(5);
        textResultado.setOpaque(false);
        jScrollPane1.setViewportView(textResultado);

        jScrollPane2.setViewportView(listResultado);

        jLabel1.setText("Classificação for nº de votos:");

        jLabel2.setText("Listagem de candidatos:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        //Organizar por ondem de mais votados (NumCand = aux3, votosCand = aux2)
        ArrayList numCand = new ArrayList(Eleicoes.currentElection.getNumCandidato());
        ArrayList votosCand = new ArrayList(Eleicoes.currentElection.getVotosCandidato());
        ArrayList <Integer> aux2 = new ArrayList();
        ArrayList aux3 = new ArrayList();
        int x, maiorIndex;
        
        for(int i=0 ; i<Eleicoes.currentElection.getVotosCandidato().size(); i++){
            aux2.add(0);
            x=0;
            maiorIndex=0;
            System.out.println("entrou i:  "+i);
            for(int j=0 ; j<Eleicoes.currentElection.getVotosCandidato().size() ; j++){
                if(Integer.parseInt(votosCand.get(j).toString())>x){
                    System.out.println("entrou j: "+j);
                    x=Integer.parseInt(votosCand.get(j).toString());
                    aux2.set(i, Integer.parseInt(votosCand.get(j).toString()));
                    maiorIndex = j;
                }
            }
            //zera votos da variável auxiliar para não repetir
            votosCand.set(maiorIndex, 0);
            //aux3, list dos numeros dos candidatos em ordem decrescente
            aux3.add(Eleicoes.currentElection.getNumCandidato().get(maiorIndex).toString());
            //aux2, list dos votos em ordem decrescente
        }
        
        double sum =0;
        for(int y=0 ; y<Eleicoes.currentElection.getVotosCandidato().size() ; y++){
            sum += Double.parseDouble(Eleicoes.currentElection.getVotosCandidato().get(y).toString());
        }
        
        DecimalFormat df = new DecimalFormat();
        //Imprime em ordem decrescente de numero de votos
        for(int i=0 ; i<Eleicoes.currentElection.getNumCandidato().size() ; i++){
            textResultado.setText(textResultado.getText().concat("Candidato: "+aux3.get(i)+"    Votos: "+aux2.get(i)+"     "+ df.format((aux2.get(i)/sum)*100)+"%\n\n"));
        }
        
        //Imprime em ordem de cadastro de candidatos na eleição
        listResultado.setModel(model);
        double v;
        for(int i=0 ; i<Eleicoes.currentElection.getNumCandidato().size() ; i++){
            v = Double.parseDouble(Eleicoes.currentElection.getVotosCandidato().get(i).toString());
            model.addElement("Candidato: "+Eleicoes.currentElection.getNumCandidato().get(i).toString()+"    Votos: "+Eleicoes.currentElection.getVotosCandidato().get(i)+"     "+ df.format((v/sum)*100)+"%\n\n");
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadoEleicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadoEleicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadoEleicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadoEleicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultadoEleicao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listResultado;
    private javax.swing.JTextArea textResultado;
    // End of variables declaration//GEN-END:variables
}
